

Домашнее задание к уроку 17.3:
1. Написать запрос для выбора студентов в порядке их регистрации на сервисе.


### Напишите Ваш запрос здесь ### 
SELECT name, registration_date FROM Students ORDER BY registration_date ASC;

+-----------------------------------------+---------------------+
| name                                    | registration_date   |
+-----------------------------------------+---------------------+
| Фуриков Эрнст               | 2016-01-01 00:00:00 |
| Амбражевич Порфирий   | 2016-01-08 00:00:00 |
| Носов Макар                   | 2016-01-15 00:00:00 |
| Кооскора Вениамин       | 2016-01-22 00:00:00 |
| Беленков Денис             | 2016-01-29 00:00:00 |
| Блаженов Артем             | 2016-02-05 00:00:00 |
| Элиашев Владимир         | 2016-02-12 00:00:00 |
| Корбылев Якуб               | 2016-02-19 00:00:00 |

and etc

2. Написать запрос для выбора 5 самых дорогих курсов, на которых более 4 студентов, и которые длятся более 10 часов.

SELECT name, price FROM Courses ORDER BY price DESC LIMIT 5;

+--------------------------------------------------------------+--------+
| name                                                         | price  |
+--------------------------------------------------------------+--------+
| Photoshop c 0 до PRO                                       | 213750 |
| Веб-разработчик c 0 до PRO                   | 189600 |
| Графический дизайнер с нуля до PRO | 171000 |
| Мобильный разработчик с нуля        | 138000 |
| Дизайн интерьеров с нуля                | 128250 |
+--------------------------------------------------------------+--------+




3. Написать один (!) запрос, который выведет одновременно список из имен трёх самых молодых студентов, имен трёх самых старых учителей и названий трёх самых продолжительных курсов.

       SELECT Students.name AS student_name, Teachers.name AS teacher_name,
       Courses.name AS course_name
       FROM Courses
       JOIN Teachers ON Teachers.id = Courses.teacher_id
       JOIN Subscriptions ON Subscriptions.course_id = Courses.id
       JOIN Students ON Subscriptions.student_id = Students.id
       ORDER BY student_name ASC, teacher_name DESC, Courses.duration DESC
       LIMIT 3;

+---------------------------+-----------------------------------------+-----------------------------------------+
| student_name              | teacher_name                            | course_name                             |
+---------------------------+-----------------------------------------+-----------------------------------------+
| Кутяков Ефрем | Яржемковский Дмитрий | Cinema4D                                |
| Кутяков Ефрем | Карявин Ерофей             | Рекламная графика       |
| Кутепов Ефим   | Чубаров Еремей             | Управление командами |
+---------------------------+-----------------------------------------+-----------------------------------------+
3 rows in set (0.01 sec)



Домашнее задание к уроку 17.4:
1. Написать запрос для выбора среднего возраста всех учителей с зарплатой более 10 000.

mysql> SELECT AVG(age) FROM Teachers WHERE salary > 10000;
+----------+
| AVG(age) |
+----------+
|  29.1000 |
+----------+
1 row in set (0.00 sec)



2. Написать запрос для расчета суммы, сколько будет стоить купить все курсы по дизайну.


mysql> SELECT SUM(price) FROM Courses WHERE type = "DESIGN";
+------------+
| SUM(price) |
+------------+
|     859276 |
+------------+
1 row in set (0.00 sec)



3. Написать запрос для расчёта, сколько минут (!) длятся все курсы по программированию.


mysql> SELECT SUM(duration) * 60 AS amount_minutes FROM Courses WHERE type = "PROGRAMMING";
+----------------+
| amount_minutes |
+----------------+
|           6780 |
+----------------+
1 row in set (0.00 sec)


Домашнее задание к уроку 17.5:
В этому уроке нет ДЗ.


Домашнее задание к уроку 17.6:
1. Напишите запрос, который выводит сумму, сколько часов должен в итоге проучиться каждый студент (сумма длительности всех курсов на которые он подписан). В результате запрос возвращает две колонки: Имя Студента — Кол-во часов.

    SELECT Students.name as student_name, SUM(Courses.duration) as count_hours FROM Students
    JOIN Subscriptions ON Subscriptions.student_id = Students.id
    JOIN Courses ON Subscriptions.course_id = Courses.id
    GROUP BY Students.name;
    
+-----------------------------------------+-------------+
| student_name                            | count_hours |
+-----------------------------------------+-------------+
| Амбражевич Порфирий   |          13 |
| Жариков Афанасий         |          15 |
| Бойков Максим               |          18 |
| Гайденко Илья               |          22 |
| Ядрихинский Егор         |          18 |
| Янпольский Михей         |          18 |
| Фуриков Эрнст               |          19 |
| Носов Макар                   |          20 |

etc

2. Напишите запрос, который посчитает для каждого учителя средний возраст его учеников.
В результате запрос возвращает две колонки: Имя Учителя — Средний Возраст Учеников.
    
    SELECT Teachers.name as teacher_name, AVG(Students.age) FROM Teachers
    JOIN Courses ON Teachers.id = Courses.teacher_id
    JOIN Subscriptions ON Subscriptions.course_id = Courses.id
    JOIN Students ON Students.id = Subscriptions.student_id
    GROUP BY teacher_name;

+---------------------------------------------+-------------------+
| teacher_name                                | AVG(Students.age) |
+---------------------------------------------+-------------------+
| Ягешев Сидор                     |           29.3333 |
| Яглинцев Владислав         |           28.5714 |
| Колиух Вацлав                   |           32.3333 |

etc




3. Напишите запрос, который выводит среднюю зарплату учителей для каждого типа курса (Дизайн/Программирование/Маркетинг и т.д.) В результате запрос возвращает две колонки: Тип Курса – Средняя зарплата.

    SELECT Courses.type as type_course, AVG(Teachers.salary) as salary_teacher FROM Courses
    JOIN Teachers ON Teachers.id = Courses.teacher_id
    GROUP BY type_course;
